// SEO Text + Image Component schema based on the provided JSON
// Content Type ID: spTwoColumnComponent

export const CONTENTFUL_SEO_TEXT_SCHEMA = {
  contentTypeId: 'spTwoColumnComponent',
  name: '[SP] SEO text + image component',
  description: 'SEO text + image column component for static pages',
  displayField: 'title',

  fields: {
    smallPhotoTextBlock: {
      id: 'smallPhotoTextBlock',
      name: 'Small Photo Text Block',
      type: 'Boolean',
      localized: false,
      required: false,
      aiGenerated: false,
      default: false,
      description: 'Whether this is a small photo text block',
    },

    imageOn: {
      id: 'imageOn',
      name: 'imageOn',
      type: 'Symbol',
      localized: false,
      required: true,
      validations: [
        {
          in: ['left', 'right'],
        },
      ],
      aiGenerated: true,
      default: 'right',
      description: 'Image position - left or right',
    },

    title: {
      id: 'title',
      name: 'Title',
      type: 'Symbol',
      localized: true,
      required: true,
      aiGenerated: true,
      description: 'Component title',
    },

    description: {
      id: 'description',
      name: 'description',
      type: 'Text',
      localized: true,
      required: false,
      aiGenerated: true,
      description: 'Main text content',
    },

    smallPhotoText: {
      id: 'smallPhotoText',
      name: 'smallPhotoText',
      type: 'Text',
      localized: true,
      required: false,
      validations: [
        {
          size: {
            max: 400,
          },
          message:
            'The maximum number of characters in preview should not pass 170!',
        },
      ],
      aiGenerated: false,
      description: 'Short photo description text',
    },

    smallImageUrl: {
      id: 'smallImageUrl',
      name: 'smallImageURL',
      type: 'Link',
      localized: false,
      required: false,
      disabled: true,
      omitted: true,
      linkType: 'Asset',
      aiGenerated: false,
      description: 'Small image asset (disabled)',
    },

    imageUrl: {
      id: 'imageUrl',
      name: 'ImageURL',
      type: 'Link',
      localized: false,
      required: false,
      linkType: 'Asset',
      validations: [
        {
          assetFileSize: {
            min: null,
            max: 20971520, // 20MB
          },
        },
      ],
      aiGenerated: false, // We'll use default image or provided image
      description: 'Main image asset',
    },

    imageAltText: {
      id: 'imageAltText',
      name: 'imageAltText',
      type: 'Symbol',
      localized: true,
      required: false,
      aiGenerated: true,
      description: 'Image alt text for accessibility',
    },

    largeImageUrl: {
      id: 'largeImageUrl',
      name: 'largeImageURL',
      type: 'Link',
      localized: false,
      required: false,
      disabled: true,
      omitted: true,
      linkType: 'Asset',
      aiGenerated: false,
      description: 'Large image asset (disabled)',
    },

    actions: {
      id: 'actions',
      name: 'Action(s)',
      type: 'Array',
      localized: false,
      required: false,
      items: {
        type: 'Link',
        linkType: 'Entry',
        validations: [
          {
            linkContentType: ['action'],
          },
        ],
      },
      aiGenerated: false, // Complex CTA actions not generated by AI for now
      description: 'Array of action components',
    },

    isFrame: {
      id: 'isFrame',
      name: 'isFrame',
      type: 'Boolean',
      localized: false,
      required: true,
      aiGenerated: false,
      default: false,
      description: 'Whether image has frame styling',
    },

    isThicker: {
      id: 'isThicker',
      name: 'isThicker',
      type: 'Boolean',
      localized: false,
      required: true,
      aiGenerated: false,
      default: false,
      description: 'Whether to use thicker styling',
    },

    anchorElementId: {
      id: 'anchorElementId',
      name: 'anchorElementId',
      type: 'Symbol',
      localized: false,
      required: false,
      aiGenerated: false,
      default: '',
      description: 'Anchor element ID for navigation',
    },

    isVideo: {
      id: 'isVideo',
      name: 'isVideo',
      type: 'Boolean',
      localized: false,
      required: false,
      defaultValue: {
        'en-US': false,
      },
      aiGenerated: false,
      default: false,
      description: 'Whether content is video instead of image',
    },

    videoSources: {
      id: 'videoSources',
      name: 'Video Sources',
      type: 'Array',
      localized: false,
      required: false,
      items: {
        type: 'Link',
        linkType: 'Asset',
        validations: [
          {
            linkMimetypeGroup: ['video'],
          },
        ],
      },
      aiGenerated: false,
      description: 'Array of video assets',
    },

    lilt_status: {
      id: 'lilt_status',
      name: 'Lilt Status',
      type: 'Symbol',
      localized: false,
      required: false,
      omitted: true,
      aiGenerated: false,
      description: 'Lilt translation status',
    },
  },

  // Fields that AI can generate
  aiGeneratedFields: ['imageOn', 'title', 'description'],

  // Required fields for component creation
  requiredFields: ['imageOn', 'title', 'isFrame', 'isThicker'],

  // Default values
  defaultValues: {
    imageOn: 'right',
    isFrame: false,
    isThicker: false,
    anchorElementId: '',
    smallPhotoTextBlock: false,
    isVideo: false,
  },

  // Localized fields
  localizedFields: ['title', 'description', 'smallPhotoText'],
};

// AI Generated SEO Text structure
export interface AIGeneratedSEOText {
  title: string;
  description: string;
  imagePosition?: 'left' | 'right';
}

export interface AIGeneratedSEOTextSection {
  type: 'seoText';
  content: AIGeneratedSEOText;
}

export default CONTENTFUL_SEO_TEXT_SCHEMA;
